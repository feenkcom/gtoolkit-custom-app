name: Release Workflow Artifacts
on:
  workflow_call:

    inputs: 
      artifacts:
        description: 'List of workflow artifacts split by ` ` (space) characters, e.g., `"GlamorousToolkit-x86_64-apple-darwin.app.zip GlamorousToolkit-x86_64-pc-windows-msvc.zip"`, that should be uploaded as an existing or new version'
        required: true
        type: string
      version: 
        description: 'Version under which artifacts should be uploaded. If "bump" is set, a new version will be released.'
        required: false
        default: "bump"
        type: string

    outputs:
      version: 
        description: 'Release version, e.g., `v0.1.42`'
        value: ${{ jobs.Release.outputs.version }}

    secrets:
      release_token: 
        description: 'GitHub token value with release and upload permissions.'
        required: true

env:
  GTOOLKIT_VM_DIR: 'gtoolkit-vm'
  APP_LIBRARIES_VERSIONS: 'libraries.version'

jobs:
  Release: 
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.variables.outputs.version }}

    env: 
      TARGET: 'x86_64-unknown-linux-gnu'

    steps: 

      - name: Define Environment Variables
        id: environment
        run: |
          if [ -z "${{ inputs.version }}" -o "${{ inputs.version }}" = "bump" ]; then
            echo "Feenk Releaser will create a new version (git tag)."
            echo "FEENK_BUMP_VERSION=true" >> $GITHUB_ENV
          else
            echo "Feenk Releaser will use an existing version (git tag): ${{ inputs.version }}."
            echo "FEENK_BUMP_VERSION=false" >> $GITHUB_ENV
          fi

      - name: Print Environment Variables
        run: |
          echo "RAW FEENK_BUMP_VERSION value is: >>>${{ env.FEENK_BUMP_VERSION }}<<<"
          echo "JSON FEENK_BUMP_VERSION value is: >>>${{ fromJSON(env.FEENK_BUMP_VERSION) }}<<<"

      - name: Checkout Repository Code
        uses: actions/checkout@v2 

      - name: Checkout GToolkit VM Repository Code
        uses: feenkcom/gtoolkit-custom-app/.github/actions/checkout-gtoolkit-vm@main

      - name: Define Repository Name
        shell: bash
        run: |
          REPOSITORY_NAME="$(echo ${{ github.repository }} | sed -n -e 's@^[^/]*/\([^/]*\)@\1@p')"
          echo REPOSITORY_NAME=${REPOSITORY_NAME} >> $GITHUB_ENV
          echo REPOSITORY_NAME=${REPOSITORY_NAME}
          REPOSITORY_OWNER="${{ github.repository_owner }}"
          echo REPOSITORY_OWNER=${REPOSITORY_OWNER} >> $GITHUB_ENV
          echo REPOSITORY_OWNER=${REPOSITORY_OWNER}

      - name: Download All VM Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.GTOOLKIT_VM_DIR }}

      - name: Download Feenk Releaser
        shell: bash
        working-directory: ${{ env.GTOOLKIT_VM_DIR }}
        run: |
          wget -O feenk-releaser https://github.com/feenkcom/releaser-rs/releases/download/${{ env.FEENK_RELEASER_VERSION }}/feenk-releaser-${{ env.TARGET }}
          chmod +x feenk-releaser

      - name: Display Files
        working-directory: ${{ env.GTOOLKIT_VM_DIR }}
        run: |
          echo "::group::List Working Directory"
          ls -la
          echo "::endgroup::"
          echo "::group::List Artifacts"
          ls -la ${{ inputs.artifacts }}
          echo "::endgroup::"

      # Artifacts are located in subdirectories of the same name as artifacts.
      # We need to add subdirectory prefixes.
      - name: Define Artifact Locations
        run: |
          FEENK_ARTIFACT_LOCATIONS="$(echo '${{ inputs.artifacts }}' | tr -s ' ' '\n' | sed -e 's@^.*$@&/&@' | tr '\n' ' ')"
          echo FEENK_ARTIFACT_LOCATIONS="${FEENK_ARTIFACT_LOCATIONS}" >> $GITHUB_ENV
          echo FEENK_ARTIFACT_LOCATIONS="${FEENK_ARTIFACT_LOCATIONS}"

      - name: Release As New Version
        env: 
          GITHUB_TOKEN: ${{ secrets.release_token }}
        working-directory: ${{ env.GTOOLKIT_VM_DIR }}
        run: |
          ./feenk-releaser \
            --owner ${{ env.REPOSITORY_OWNER }} \
            --repo ${{ env.REPOSITORY_NAME }} \
            --token GITHUB_TOKEN \
            --bump minor \
            --auto-accept \
            --assets ${{ env.FEENK_ARTIFACT_LOCATIONS }}
          echo FEENK_RELEASE_VERSION=bump >> $GITHUB_ENV
        if: ${{ fromJSON(env.FEENK_BUMP_VERSION) }}
      
      - name: Release Into Existing Version
        env: 
          GITHUB_TOKEN: ${{ secrets.release_token }}
        working-directory: ${{ env.GTOOLKIT_VM_DIR }}
        run: |
          ./feenk-releaser \
            --owner ${{ env.REPOSITORY_OWNER }} \
            --repo ${{ env.REPOSITORY_NAME }} \
            --token GITHUB_TOKEN \
            --version ${{ inputs.version }} \
            --auto-accept \
            --assets ${{ env.FEENK_ARTIFACT_LOCATIONS }}
          echo FEENK_RELEASE_VERSION=${{ inputs.version }} >> $GITHUB_ENV
        if: ${{ ! fromJSON(env.FEENK_BUMP_VERSION) }}

      # At this moment, it does NOT return right values for bump versions
      - name: Define Job Outputs
        id: variables
        run: |
          echo "::set-output name=version::${{ env.FEENK_RELEASE_VERSION }}"
